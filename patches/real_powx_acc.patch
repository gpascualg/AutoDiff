diff --git a/kernel/generic/powx_kernel.c b/kernel/generic/powx_kernel.c
index b894fa3..5bf0c0b 100644
--- a/kernel/generic/powx_kernel.c
+++ b/kernel/generic/powx_kernel.c
@@ -36,6 +36,6 @@ void KERNEL_NAME(VMLLONG n, VML_FLOAT * a, VML_FLOAT * b, VML_FLOAT * y, VML_FLO
   VMLLONG i=0;
   VML_FLOAT b0=b[0];
   for(i=0; i<n; i++){
-    y[i]=POW(a[i], b0);
+    y[i]+=POW(a[i], b0);
   }
 }
diff --git a/kernel/x86_64/dpowx_kernel_avx.c b/kernel/x86_64/dpowx_kernel_avx.c
index 7375a72..acb6ab1 100644
--- a/kernel/x86_64/dpowx_kernel_avx.c
+++ b/kernel/x86_64/dpowx_kernel_avx.c
@@ -11,11 +11,12 @@ void KERNEL_NAME(VMLLONG n, VML_FLOAT * a, VML_FLOAT * b, VML_FLOAT * y, VML_FLO
     v4sd bb = _mm256_broadcast_sd(b);
     for (j = 0; j < m; j++) {
         v4sd aa = _mm256_loadu_pd(a + 4 * j);
-        v4sd tem = simd_pow4d(aa, bb);
+        v4sd yy = _mm256_loadu_pd(y + 4 * j);
+        v4sd tem = _mm256_add_pd(simd_pow4d(aa, bb), yy);
         _mm256_storeu_pd(y + 4 * j, tem);
     }
 
     for (j = 0; j < k; j++) {
-        y[j + l] = pow(a[j + l], *b);
+        y[j + l] += pow(a[j + l], *b);
     }
 }
diff --git a/kernel/x86_64/spowx_kernel_avx.c b/kernel/x86_64/spowx_kernel_avx.c
index eff3299..19893df 100644
--- a/kernel/x86_64/spowx_kernel_avx.c
+++ b/kernel/x86_64/spowx_kernel_avx.c
@@ -10,11 +10,12 @@ void KERNEL_NAME(VMLLONG n, VML_FLOAT * a, VML_FLOAT * b, VML_FLOAT * y, VML_FLO
     v8sf bb = _mm256_broadcast_ss(b);
     for (j = 0; j < m; j++) {
         v8sf aa = _mm256_loadu_ps(a + 8 * j);
-        v8sf tem = simd_pow8f(aa, bb);
+        v8sf yy = _mm256_loadu_ps(y + 8 * j);
+        v8sf tem = _mm256_add_ps(simd_pow8f(aa, bb), yy);
         _mm256_storeu_ps(y + 8 * j, tem);
     }
 
     for (j = 0; j < k; j++) {
-        y[j + l] = powf(a[j + l], *b);
+        y[j + l] += powf(a[j + l], *b);
     }
 }
diff --git a/reference/vpowx.c b/reference/vpowx.c
index d78f962..3c07a0b 100644
--- a/reference/vpowx.c
+++ b/reference/vpowx.c
@@ -33,7 +33,7 @@ void OpenVML_FUNCNAME_REF(vsPowx)(const VML_INT n, const float * a, const float
   if (a==NULL || b==NULL || y==NULL) return;
 
   for(i=0; i<n; i++){
-    y[i]=powf(a[i], b[0]);
+    y[i]+=powf(a[i], b[0]);
   }
 }
 
@@ -43,6 +43,6 @@ void OpenVML_FUNCNAME_REF(vdPowx)(const VML_INT n, const double * a, const doubl
   if (a==NULL || b==NULL || y==NULL) return;
 
   for(i=0; i<n; i++){
-    y[i]=pow(a[i], b[0]);
+    y[i]+=pow(a[i], b[0]);
   }
 }
